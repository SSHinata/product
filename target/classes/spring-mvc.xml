<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- 自动扫描该包，使用SpringMVC认为包下用了@Controller注解的类是控制器,避免扫描@Service导致事务不能使用 -->
    <context:component-scan base-package = "com.product.*">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    <!-- 加载配置属性文件-->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:file.properties"/>
    <!-- 扫描web相关的bean -->
    <!--<context:component-scan base-package="com.shop.controller,com.shop.service.impl,com.shop.dao"/>-->

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id = "mappingJacksonHttpMessageConverter"
          class = "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name = "supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <property name="defaultViews">
            <list>
                <!-- JSON View -->
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
                </bean>
            </list>
        </property>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置默认编码 -->
        <property name="defaultEncoding" value="UTF-8"></property>
        <!-- 设置文件上传的最大的值5MB 5*1024*1024 -->
        <property name="maxUploadSize" value="5242880"></property>
    </bean>


    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 添加后可以显示welcome-file界面 -->
    <mvc:default-servlet-handler/>

    <!-- 启动注解 -->
    <mvc:annotation-driven />


    <!-- 静态资源默认servlet配置 -->
    <mvc:default-servlet-handler/>

    <!-- 注册拦截器-->
    <mvc:interceptors>
         <mvc:interceptor>
             <mvc:mapping path="/userHome/*"/>
             <bean class="com.product.filter.UserFilter"></bean>
         </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/manager/*"/>
            <bean class="com.product.filter.ManagerFilter"></bean>
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 配置资源映射 没有放在WEB-INF下,故不需要配置-->
    <!--<mvc:resources location="/WEB-INF/css/" mapping="/css/**"/>-->
    <!--<mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>-->
</beans>